def SONAR_URL = "http://3.30.222.183:9000"
def DOCKER_IMAGE = "abhishekf5/ultimate-cicd:${BUILD_NUMBER}"
def GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
def GIT_USERNAME = "arunareath"

def dockerImage
def REGISTRY_CREDENTAILS = credentials('docker-cred')
def GITHUB_TOKEN = credentials('github')

node {

    stage('Checkout'){
        echo'passed'
        // git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
    }

    stage('Build & Test'){

        sh 'ls -ltr'
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'

    }

    stage('static code analysis'){
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]){
            sh "cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}"
        }
    }

    stage('Build and Push Docker Images'){

        script {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', REGISTRY_CREDENTIALS){
                dockerImage.push()
            }
        }

    }

    stage('Update Deployment File'){
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]){
            sh """
                git config user.email "arunareath@gmail.com"
                git config user.name "arunareath"
                BUILD_NUMBER = ${BUILD_NUMBER}
                sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                git commit -m "Update deployment image and version ${BUILD_NUMBER}"
                git push https://${GITHUB_TOKEN}@github.com/${GIT_USERNAME}/${GIT_REPO_NAME} HEAD:main
            """
        }
    }
}
